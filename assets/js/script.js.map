{"version":3,"sources":["series.service.js","omdb.service.js","media.service.js","pages.service.js","app.js","home.js","home.component.js","list-item.component.js","detail.component.js","thumbnail.component.js","actors.component.js","rating.component.js","about.js","about.component.js"],"names":["SeriesService","$http","getSeries","page","request","pagedAPI","API","get","then","response","totalPages","headers","processSeriesList","data","getSerie","id","totalPosts","processSerie","item","processedItem","date","link","title","rendered","spanishTitle","acf","slug","content","image","map","getImageThumbnail","sizes","thumbnail","OmdbService","getImage","query","cleanedQuery","split","join","getYear","getActors","getRating","MediaService","getMediaItem","processMediaItem","mediaBase","thumbnailImage","medium","mediumImage","mediumLargeImage","large","largeImage","alt","type","mediumLarge","PagesService","getPage","angular","module","home","bindings","list","templateUrl","controller","ctrl","this","currentPage","pageLimit","busy","activeItem","loadMorePages","concat","component","config","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","state","url","resolve","otherwise","listItem","selectItem","detail","omdbQuery","featuredImageId","actors","rating","round","value","step","inv","Math","stars","about","pageContent","factory"],"mappings":"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","file":"script.js","sourcesContent":["function SeriesService($http) {\n\n    var API = 'wp-json/wp/v2/series';\n    var pagedAPI = 'wp-json/wp/v2/series?page=';\n    var request = '';\n\n    function getSeries(page) {\n\n        if (page) {\n            request = pagedAPI;\n        } else {\n            request = API;\n            page = '';\n        }\n\n        return $http\n            .get(request + page)\n            .then(function (response) {\n                var totalPages = response.headers('X-WP-TotalPages');\n                return processSeriesList(response.data, totalPages);\n            });\n\n    }\n\n    function getSerie(id) {\n\n        return $http\n            .get(API + '/' + id)\n            .then(function (response) {\n                var totalPosts = response.headers('X-WP-Total');\n                return processSerie(response.data, totalPosts);\n            });\n\n    }\n\n    function processSerie(item, totalPosts) {\n\n        var processedItem;\n\n        processedItem = {\n            id              : item.id,\n            date            : item.date,\n            link            : item.link,\n            title           : item.title.rendered,\n            spanishTitle    : item.acf['titulo_traducido'],\n            slug            : item.slug,\n            content         : item.content.rendered,\n            image           : item['featured_media'],\n            totalPosts      : totalPosts\n        };\n\n        return processedItem;\n\n    }\n\n    function processSeriesList(data, totalPages) {\n\n        return data.map(function (item) {\n\n            var processedItem;\n\n            processedItem = {\n                id              : item.id,\n                date            : item.date,\n                link            : item.link,\n                title           : item.title.rendered,\n                spanishTitle    : item.acf['titulo_traducido'],\n                slug            : item.slug,\n                content         : item.content.rendered,\n                image           : item['featured_media'],\n                totalPages      : totalPages\n            };\n\n            return processedItem;\n        });\n\n    }\n\n\n\n    // getImageThumbnail when using the plugin Better REST Featured Images\n    function getImageThumbnail(id) {\n\n        return $http\n            .get(API + '/' + id)\n            .then(function (response) {\n                return response.data['better_featured_image']['media_details'].sizes.thumbnail['source_url'];\n            });\n\n    }\n\n    return {\n        getSeries           : getSeries,\n        getSerie            : getSerie,\n        getImageThumbnail   : getImageThumbnail\n    }\n}\n\n\nangular\n    .module('app')\n    .factory('SeriesService', SeriesService);","function OmdbService($http) {\n\n    var API = 'https://www.omdbapi.com/?t=';\n\n    function getImage(query) {\n\n        var cleanedQuery = query.split(' ').join('+');\n\n        return $http\n            .get(API + cleanedQuery)\n            .then(function (response) {\n                return response.data['Poster'];\n            });\n\n    }\n\n    function getYear(query) {\n\n        var cleanedQuery = query.split(' ').join('+');\n\n        return $http\n            .get(API + cleanedQuery)\n            .then(function (response) {\n                return response.data['Year'];\n            });\n\n    }\n\n    function getActors(query) {\n\n        var cleanedQuery = query.split(' ').join('+');\n\n        return $http\n            .get(API + cleanedQuery)\n            .then(function (response) {\n                return response.data['Actors'];\n            });\n\n    }\n\n    function getRating(query) {\n\n        var cleanedQuery = query.split(' ').join('+');\n\n        return $http\n            .get(API + cleanedQuery)\n            .then(function (response) {\n                return response.data['imdbRating'];\n            });\n\n    }\n\n    return {\n        getImage    : getImage,\n        getYear     : getYear,\n        getActors   : getActors,\n        getRating   : getRating\n    }\n}\n\n\nangular\n    .module('app')\n    .factory('OmdbService', OmdbService);","function MediaService($http) {\n\n    var API = 'wp-json/wp/v2/media';\n\n    function getMediaItem(id) {\n\n        return $http\n            .get(API + '/' + id)\n            .then(function (response) {\n                return processMediaItem(response.data);\n            });\n\n    }\n\n    function processMediaItem(item) {\n\n            var processedItem;\n\n            if (item['media_details'].sizes) {\n                var mediaBase = item['media_details'].sizes;\n\n                if (mediaBase.thumbnail) {\n                    var thumbnailImage = mediaBase.thumbnail['source_url'];\n                }\n\n                if (mediaBase.medium) {\n                    var mediumImage = mediaBase.medium['source_url'];\n                }\n\n                if (mediaBase['medium_large']) {\n                    var mediumLargeImage = mediaBase['medium_large']['source_url'];\n                }\n\n                if (mediaBase.large) {\n                    var largeImage = mediaBase.large['source_url'];\n                }\n            }\n\n            processedItem = {\n                id              : item.id,\n                date            : item.date,\n                link            : item.link,\n                title           : item.title.rendered,\n                alt             : item['alt_text'],\n                spanishTitle    : item.acf['titulo_traducido'],\n                slug            : item.slug,\n                type            : item['media_type'],\n                sizes           : {\n                    thumbnail   : thumbnailImage,\n                    medium      : mediumImage,\n                    mediumLarge : mediumLargeImage,\n                    large       : largeImage\n                }\n            };\n\n            return processedItem;\n\n    }\n\n\n\n    return {\n        getMediaItem: getMediaItem\n    }\n}\n\n\nangular\n    .module('app')\n    .factory('MediaService', MediaService);","function PagesService($http) {\n\n    var API = 'wp-json/wp/v2/pages';\n\n\n    function getPage(slug) {\n\n        return $http\n            .get(API + '?slug=' + slug)\n            .then(function (response) {\n                return response.data[0];\n            });\n\n    }\n\n\n    return {\n        getPage : getPage\n    }\n}\n\n\nangular\n    .module('app')\n    .factory('PagesService', PagesService);","angular\n    .module('app', [\n        'home',\n        'about'\n    ]);","angular\n    .module('home', [\n        'ngSanitize',\n        'ui.router',\n        'infinite-scroll',\n    ]);","var home = {\n    bindings: {\n        list: '<'\n    },\n    templateUrl: 'wp-content/themes/wp_ng_spa/assets/js/components/home/home.component.html',\n    controller: function(SeriesService) {\n        var ctrl = this;\n        var currentPage = 2;\n        var pageLimit = 5;\n        ctrl.busy = false;\n        ctrl.activeItem = 0;\n\n        ctrl.loadMorePages = function () {\n\n            if (currentPage <= pageLimit) {\n                ctrl.busy = true;\n\n                SeriesService\n                    .getSeries(currentPage)\n                    .then(function(response) {\n                        currentPage++;\n                        pageLimit = response[0].totalPages;\n                        ctrl.list = ctrl.list.concat(response);\n                        ctrl.busy = false;\n                    });\n\n            }\n\n        };\n\n    }\n};\n\nangular\n    .module('home')\n    .component('home', home)\n    .config(function ($stateProvider, $urlRouterProvider, $locationProvider) {\n\n        $locationProvider.html5Mode(true);\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                component: 'home',\n                resolve: {\n                    list: function(SeriesService) {\n                        return SeriesService.getSeries();\n                    }\n                }\n            });\n\n        $urlRouterProvider.otherwise('/');\n    });","var listItem = {\n    bindings: {\n        item: '<',\n        activeItem: '='\n    },\n    controller: function () {\n\n        var ctrl = this;\n\n        ctrl.selectItem = function (item) {\n\n            if (!ctrl.activeItem || ctrl.activeItem !== item) {\n                ctrl.activeItem = item;\n            } else {\n                ctrl.activeItem = 0;\n            }\n\n        };\n\n\n    },\n    templateUrl: 'wp-content/themes/wp_ng_spa/assets/js/components/home/list-item/list-item.component.html'\n};\n\nangular\n    .module('home')\n    .component('listItem', listItem);","var detail = {\n    bindings: {\n        activeItem: '<',\n        item: '<'\n    },\n    controller: function() {\n\n    },\n    templateUrl: 'wp-content/themes/wp_ng_spa/assets/js/components/home/list-item/detail/detail.component.html'\n};\n\nangular\n    .module('home')\n    .component('detail', detail);","var thumbnail = {\n    bindings: {\n        omdbQuery: '<',\n        featuredImageId: '<'\n    },\n    controller: function (OmdbService, MediaService) {\n\n        var ctrl = this;\n        ctrl.image = '';\n\n        if (ctrl.featuredImageId) {\n\n            if(MediaService) {\n                MediaService\n                    .getMediaItem(ctrl.featuredImageId)\n                    .then(function(response) {\n                        ctrl.image = response['sizes']['thumbnail'];\n                    });\n            }\n\n\n        } else {\n\n            OmdbService\n                .getImage(ctrl.omdbQuery)\n                .then(function(response) {\n                    ctrl.image = response;\n                });\n\n        }\n\n\n    },\n    templateUrl: 'wp-content/themes/wp_ng_spa/assets/js/components/home/list-item/thumbnail/thumbnail.component.html'\n};\n\n\nangular\n    .module('home')\n    .component('thumbnail', thumbnail);","var actors = {\n    bindings: {\n        omdbQuery: '<'\n    },\n    controller: function (OmdbService) {\n\n        var ctrl = this;\n        ctrl.actors = '';\n\n        OmdbService\n            .getActors(ctrl.omdbQuery)\n            .then(function(response) {\n                ctrl.actors = response;\n            });\n\n    },\n    templateUrl: 'wp-content/themes/wp_ng_spa/assets/js/components/home/list-item/actors/actors.component.html'\n};\n\nangular\n    .module('home')\n    .component('actors', actors);","var rating = {\n    bindings: {\n        omdbQuery: '<'\n    },\n    controller: function (OmdbService) {\n\n        var ctrl = this;\n        ctrl.stars = '';\n\n        OmdbService\n            .getRating(ctrl.omdbQuery)\n            .then(function(response) {\n                ctrl.stars = response;\n                ctrl.rating = {\n                    value: response,\n                    stars: round(response/10*5, 0.5)\n                }\n            });\n\n        function round(value, step) {\n            step || (step = 1.0);\n            var inv = 1.0 / step;\n            return Math.round(value * inv) / inv;\n        }\n\n    },\n    templateUrl: 'wp-content/themes/wp_ng_spa/assets/js/components/home/list-item/rating/rating.component.html'\n};\n\nangular\n    .module('home')\n    .component('rating', rating);","angular\n    .module('about', [\n        'ngSanitize'\n    ]);","var about = {\n    bindings: {\n        pageContent: '<'\n    },\n    templateUrl: 'wp-content/themes/wp_ng_spa/assets/js/components/about/about.component.html',\n    controller: function() {\n\n    }\n};\n\nangular\n    .module('about')\n    .component('about', about)\n    .config(function ($stateProvider, $urlRouterProvider, $locationProvider) {\n\n        $locationProvider.html5Mode(true);\n\n        $stateProvider\n            .state('about', {\n                url: '/sobre-esta-web/',\n                component: 'about',\n                resolve: {\n                    pageContent: function(PagesService) {\n                        return PagesService.getPage('sobre-esta-web');\n                    }\n                }\n            });\n\n        $urlRouterProvider.otherwise('/');\n    });"],"sourceRoot":"/source/"}